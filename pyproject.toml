[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
py-modules = ["ircstream"]

[tool.setuptools.dynamic]
version = {attr = "ircstream.__version__"}

[project]
requires-python = ">=3.9"
name = "ircstream"
dynamic = ["version"]
authors = [
    {name = "Faidon Liambotis", email = "paravoid@debian.org"},
]
maintainers = [
    {name = "Faidon Liambotis", email = "paravoid@debian.org"},
]
description = "MediaWiki RCâ†’IRC gateway"
readme = "README.md"
keywords = ["irc", "mediawiki", "wikimedia"]
license = {text = "Apache-2.0"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Developers",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: Wiki",
    "Topic :: Communications :: Chat",
    "Typing :: Typed",
]
dependencies = [
    "prometheus_client>=0.9.0",
    "structlog>=20.1.0",
]
optional-dependencies.tests = [
    "coverage[toml]",
    "pytest",
    "pytest-cov",
    "pytest-asyncio",
    "irc",
    "pyyaml",
]
optional-dependencies.type = [
    "ircstream[tests]",
    "mypy==1.1.1",
    "types-PyYAML",
]
optional-dependencies.lint = [
    "ircstream[tests]",
    "validate-pyproject[all]==0.12.2",
    "ruff==0.0.260",
    "black==23.3.0",
    "pylint==2.17.1",
]
optional-dependencies.dev = [
    "ircstream[tests]",
    "ircstream[type]",
    "ircstream[lint]",
]

[project.urls]
homepage = "https://github.com/paravoid/ircstream"
repository = "https://github.com/paravoid/ircstream.git"

[project.scripts]
ircstream = "ircstream:main"

# testing
[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "^\\s*raise NotImplementedError\\b",
    "^\\s*return NotImplemented\\b",
    '^if __name__ == "__main__":$',
]

[tool.mypy]
strict = true

# linters
[tool.black]
line-length = 120

[tool.isort]
profile = "black"

[tool.ruff]
line-length = 120
target-version = "py39"
select = [
    "F",    # Pyflakes
    "E",    # pycodestyle Error
    "W",    # pycodestyle Warning
    "I",    # isort
    "PLE",  # Pylint Errors
    "PLW",  # Pylint Warning
    "PLC",  # Pylint Conventions
    "N",    # pep8-naming
    "D",    # pycodestyle
    "UP",   # pyupgrade
    "S",    # flake8-bandit
    "B",    # flake8-bugbear
    "DTZ",  # flake8-datetimez
    "A",    # flake8-builtins
    "C4",   # flake8-comprehensions
    "T10",  # flake8-debugger
    "ISC",  # flake8-implicit-str-concat
    "PIE",  # flake8-pie
    "T20",  # flake8-print
    "PT",   # flake8-pytest-style
    "RSE",  # flake8-raise
    "PTH",  # flake8-use-pathlib
    "ERA",  # eradicate
    "RUF",  # Ruff-specific rules
]
ignore = [
    "D107", # Missing docstring in `__init__`
    "D202", # https://github.com/PyCQA/pydocstyle/issues/627
    "D203", # incompatible with D211
    "D213", # incompatible with D213
]

[tool.ruff.per-file-ignores]
"tests/*.py" = ["S101"]  # Use of `assert` detected

[tool.pylint.format]
max-line-length = 120

[tool.pylint."messages control"]
disable = [
  "no-else-break",
  "no-else-continue",
  "no-else-return",
  "too-many-instance-attributes",
  "too-many-lines",
  "too-many-public-methods",
  "wrong-import-order",
]
